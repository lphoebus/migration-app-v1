import{ax as p}from"./index-ycM7R5Uo.js";import{o as c,u as f}from"./operatorIntersection-DUoGRiuf.js";import{fromGeometry as n,toGeometry as m,fromGeometryToGXGeometry as i,fromGeometries as s}from"./jsonConverter-C-omTpDU.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./Point2D-DO7Km_4P.js";import"./ProjectionTransformation-MOyeLIPb.js";import"./Envelope2D-CgpSZaHd.js";import"./Transformation2D-BtuI33it.js";import"./OperatorDefinitions-DP7_WWTp.js";function P(t,r){const o=n(t),e=o.getSpatialReference();return m(c(o.getGeometry(),i(r),e),e)}function R(t,r){const[o,e]=s(t);return f(o,i(r),e,7).map(a=>m(a,e)).filter(p)}export{P as execute,R as executeMany};
