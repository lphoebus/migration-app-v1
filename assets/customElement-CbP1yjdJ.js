import{L as k,s as p,x as y,F as x,E as i,Q as u,i as b,b as C}from"./index-ycM7R5Uo.js";import{i as v}from"./keyed-DROWTBQi.js";import{c as q,b as g}from"./utils4-Caci1xZm.js";import"./global-DteFDqGz.js";/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.2.1 */const a={swatch:"swatch",noColorSwatch:"swatch--no-color",checker:"checker"},f={borderLight:"rgba(0, 0, 0, 0.3)",borderDark:"rgba(255, 255, 255, 0.15)"},S=4,r={squareSize:S,size:S*2},E=b`:host{position:relative;display:inline-flex}:host([scale=s]){block-size:1.25rem;inline-size:1.25rem}:host([scale=m]){block-size:1.5rem;inline-size:1.5rem}:host([scale=l]){block-size:2rem;inline-size:2rem}.swatch{overflow:hidden;block-size:inherit;inline-size:inherit}.swatch rect{transition-property:all;transition-duration:.15s;transition-timing-function:cubic-bezier(.4,0,.2,1)}.swatch--no-color rect{fill:var(--calcite-color-foreground-1)}.swatch--no-color line{stroke:var(--calcite-color-status-danger)}.checker{fill:#cacaca}:host([hidden]){display:none}[hidden]{display:none}`,h=class h extends k{constructor(){super(...arguments),this.active=!1,this.scale="m"}load(){this.handleColorChange(this.color)}willUpdate(e){e.has("color")&&this.handleColorChange(this.color)}handleColorChange(e){this.internalColor=e?q(e):null}render(){const e=!this.internalColor,c={[a.swatch]:!0,[a.noColorSwatch]:e};return y`<svg class=${p(c)} xmlns=http://www.w3.org/2000/svg>${this.renderSwatch()}</svg>`}renderSwatch(){const{active:e,el:c,internalColor:s}=this,o=e?"100%":"0",l=x(c)==="light"?f.borderLight:f.borderDark,n=!s,t={height:"100%",rx:o,stroke:l,strokeWidth:"2",width:"100%"};if(n)return u`<clipPath id=shape><rect height=100% rx=${o??i} width=100% /></clipPath>${this.renderSwatchRect({clipPath:`inset(0 round ${o})`,...t})}<line clip-path=url(#shape) stroke-width=3 x1=100% x2=0 y1=0 y2=100% />`;const d=s.alpha(),z=g(s),$=g(s,d<1);return u`<title>${$}</title><defs><pattern height=${r.size} id=checker patternUnits=userSpaceOnUse width=${r.size} x=0 y=0><rect class=${p(a.checker)} height=${r.squareSize} width=${r.squareSize} x=0 y=0 /><rect class=${p(a.checker)} height=${r.squareSize} width=${r.squareSize} x=${r.squareSize} y=${r.squareSize} /></pattern></defs>${this.renderSwatchRect({fill:"url(#checker)",rx:t.rx,height:t.height,width:t.width})}${this.renderSwatchRect({clipPath:d<1?"polygon(100% 0, 0 0, 0 100%)":`inset(0 round ${o})`,fill:z,...t})}${d<1?this.renderSwatchRect({clipPath:"polygon(100% 0, 100% 100%, 0 100%)",fill:$,key:"opacity-fill",...t}):null}`}renderSwatchRect({clipPath:e,fill:c,height:s,key:o,rx:m,stroke:l,strokeWidth:n,width:t}){return v(o,u`<rect clip-path=${e??i} fill=${c??i} height=${s??i} rx=${m??i} stroke=${l??i} stroke-width=${n??i} width=${t??i} />`)}};h.properties={active:[7,{},{reflect:!0,type:Boolean}],color:1,scale:[3,{},{reflect:!0}]},h.styles=E;let w=h;C("calcite-color-picker-swatch",w);export{w as ColorPickerSwatch};
