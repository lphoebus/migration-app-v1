import{dY as w,dZ as y,d_ as I,d$ as T,e0 as V,db as u,e1 as H,bi as v,dR as n,e2 as d,dQ as C,b4 as b,ba as c,bb as f,bc as q}from"./index-CXz_NmzW.js";import"./UpdateTracking2D-QWGpDUQ-.js";import"./Container-DIo32FIL.js";import"./WGLContainer-BMfbgRan.js";import"./Utils-DMcQEjc1.js";import"./StyleDefinition-C4iWglQs.js";import"./constants-B-jzO-JJ.js";import"./GridShader-CaEfhUmh.js";import"./TechniqueType-CFPo0AVB.js";import"./FramebufferObject-C7qHHqPJ.js";import"./FeatureCommandQueue-CVAbuN8t.js";import"./PieChartMeshWriter-BE3z7eP_.js";import"./constants-BFLErLYb.js";import"./renderState-C8BFNKdo.js";import"./glsl-Cj7KC756.js";import"./testSVGPremultipliedAlpha-DIJKEnpa.js";import{O as U}from"./GraphicsView2D-B1PTpAfQ.js";import"./earcut-D9gy186-.js";import"./vec3f32-WCVSSNPR.js";import{r as Q,o,n as _}from"./imageUtils-DUmeD4hA.js";import{S as P,u as S}from"./LayerView-BojJIdhj.js";import{a as G}from"./HighlightGraphicContainer-CG7bQh55.js";import{i as L}from"./RefreshableLayerView-a-UgjeBp.js";import{_ as k,P as F,i as z}from"./MapServiceLayerViewHelper-DQPXRn23.js";import{r as E}from"./drapedUtils-DP9WizTL.js";import"./ProgramTemplate-JvnLebwr.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./config-DHajyIwB.js";import"./featureConversionUtils-CpssbtIx.js";import"./GraphShaderModule-DK2POoRa.js";import"./ShaderBuilder-BObC2ki4.js";import"./BindType-BBwFZqyN.js";import"./utils-D9dC4QYm.js";import"./CircularArray-CujHzHWW.js";import"./SymbolFader-C-t_OyhF.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BUbbmxTj.js";import"./libtess-BySNSjhg.js";import"./basicInterfaces-CZwQPxTp.js";import"./AttributeStore-Y9BESHfw.js";import"./timeSupport-Dc8VNtqB.js";import"./normalizeUtilsSync-XKUfJZaM.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-aYS0u9NW.js";import"./BitmapTechnique-Cc9HxN6-.js";import"./TileContainer-DrJKE2S2.js";import"./layerViewUtils-CSpedlFv.js";import"./AGraphicContainer-Cwwto3cl.js";import"./TechniqueInstance-BtTfK-zz.js";import"./popupUtils-CRR-3sHI.js";const W=[0,0];let l=class extends L(Q(P(S))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(e){var t;this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),(t=this._highlightView)==null||t.processUpdate(e)}attach(){const e="tileServers"in this.layer?this.layer.tileServers:null,t=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,t==null?void 0:t.effectiveMinLOD,t==null?void 0:t.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:e&&10*e.length||10,process:(i,h)=>this.fetchTile(i,h),scheduler:this.scheduler,priority:T.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),k(this,this.layer)){const i=this._highlightView=new U({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new G(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new F({createFetchPopupFeaturesQueryGeometry:(h,s)=>E(h,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:h,property:s})=>i.graphicUpdateHandler({graphic:h,property:s}),layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var e,t;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(e=this._popupHighlightHelper)==null||e.destroy(),(t=this._highlightView)==null||t.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(e,t){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(e,t):[]}highlight(e,t){const i=z(e);if(i.length===0)return u();const h=(t==null?void 0:t.name)??H;return this._addHighlightGraphics(i,h),u(()=>!this.destroyed&&this._removeHighlightGraphics(i,h))}_processHighlight(){var t;const e=this._getHighlights();(t=this._highlightView)==null||t.setHighlight(e)}_addHighlightGraphics(e,t){this._highlightGraphics.addMany(e),this._addHighlights(e.map(i=>i.uid),t)}_removeHighlightGraphics(e,t){this._highlightGraphics.removeMany(e),this._removeHighlights(e.map(i=>i.uid),t)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(e){var t;return v((t=this.layer.tileInfo)==null?void 0:t.spatialReference,e)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(e=>this._updatingHandles.addPromise(this._enqueueTileFetch(e)))}}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(W,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(t)),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",()=>e.destroy()),this.requestUpdate()}async fetchTile(e,t={}){return this.tilemapCache?this._fetchTileWithTilemapCache(e,t):this._fetchTileWithoutTilemapCache(e,t)}async _fetchTileWithoutTilemapCache(e,t={}){const{signal:i,resamplingLevel:h=0}=t;try{return await this._fetchImage(e,i)}catch(s){if(n(s))throw s;if(!this.resampling)return o(this._tileInfoView.tileInfo.size);if(h<3){const r=this._tileInfoView.getTileParentId(e.id);if(r){const a=new d(r),p=await this._fetchTileWithoutTilemapCache(a,{...t,resamplingLevel:h+1});return _(this._tileInfoView,p,a,e)}}return o(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(e,t={}){const i=this.tilemapCache,{signal:h,resamplingLevel:s=0}=t,r=new d(0,0,0,0);let a,p=null;try{if(p=await i.fetchAvailabilityUpsample(e.level,e.row,e.col,r,{signal:h}),!this.resampling&&r.level!==e.level)return await C(t),o(this._tileInfoView.tileInfo.size);a=await this._fetchImage(r,h)}catch(m){if(n(m))throw m;if(this.resampling&&p==="unknown"&&s<3){const g=this._tileInfoView.getTileParentId(e.id);if(g){r.set(g);try{a=await this._fetchTileWithTilemapCache(r,{...t,resamplingLevel:s+1})}catch{}}}}return a?this.resampling?_(this._tileInfoView,a,r,e):a:o(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",()=>this.requestUpdate())}catch(t){n(t)||b.getLogger(this).error(t)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchImageBitmapTile(e.level,e.row,e.col,{signal:t})}};c([f()],l.prototype,"resampling",null),c([f()],l.prototype,"tilemapCache",null),l=c([q("esri.views.2d.layers.TileLayerView2D")],l);const Fe=l;export{Fe as default};
