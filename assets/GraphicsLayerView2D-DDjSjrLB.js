import{eb as m,ec as c,bo as g,bF as n,ax as l,db as p,e1 as d,ba as o,bb as w,bc as u}from"./index-ycM7R5Uo.js";import{S as y,u as V}from"./LayerView-B7v0Tuvp.js";import{t as v}from"./GraphicContainer-sr-JRgyc.js";import{O as b}from"./GraphicsView2D-DZ1bTrQ8.js";import"./Container-BD5VinmN.js";import"./layerViewUtils-CzUYzf3f.js";import"./AGraphicContainer-CGZfsZxg.js";import"./TechniqueInstance-wUUPtmpG.js";import"./UpdateTracking2D-BJjgEBne.js";import"./Utils-DCeF5rn0.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-CkXntPfM.js";import"./ProgramTemplate-CA5zQF5j.js";import"./TileContainer-mxjwQw4K.js";import"./WGLContainer--e6uccKR.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-D8SATWuh.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-Cg72mNy5.js";import"./FeatureCommandQueue-D1fFbBuQ.js";import"./TechniqueType-CFPo0AVB.js";import"./GraphShaderModule-CkGIXfLf.js";import"./ShaderBuilder-C-_DX6FD.js";import"./BindType-BBwFZqyN.js";import"./utils-B97KUW0N.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CZFVgrNY.js";import"./AttributeStore-DtrqZA_O.js";import"./timeSupport-DMMauE8d.js";import"./normalizeUtilsSync-DKnHaPxr.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-DJdbVEdN.js";let a=class extends y(V){attach(){this.graphicsView=new b({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new v(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m(()=>{var i;return(i=this.layer)==null?void 0:i.visible},()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()})]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t){let r;typeof i=="number"?r=[i]:i instanceof g?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):n.isCollection(i)&&i.length>0&&(r=i.map(s=>s&&s.uid).toArray());const e=r==null?void 0:r.filter(l);if(!(e!=null&&e.length))return p();const h=(t==null?void 0:t.name)??d;return this._addHighlights(e,h),p(()=>!this.destroyed&&this._removeHighlights(e,h))}_processHighlight(){var t;const i=this._getHighlights();(t=this.graphicsView)==null||t.setHighlight(i)}};o([w()],a.prototype,"graphicsView",void 0),a=o([u("esri.views.2d.layers.GraphicsLayerView2D")],a);const ti=a;export{ti as default};
