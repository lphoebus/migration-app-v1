import{bu as y,ba as a,bb as d,bc as m,dE as f,dG as g,dF as b,aQ as w,ic as v,b4 as S,dz as $}from"./index-ycM7R5Uo.js";import{d as j}from"./Association-NxgZcPsX.js";let o=class extends y{constructor(e){super(e),this.associations=[]}};a([d({type:[j],json:{write:!0}})],o.prototype,"associations",void 0),o=a([m("esri.rest.networks.support.QueryAssociationsResult")],o);function I(s){const{returnDeletes:e,elements:r,gdbVersion:n,moment:i}=s.toJSON();return{returnDeletes:e,elements:JSON.stringify(r.map(t=>({globalId:t.globalId,networkSourceId:t.networkSourceId,terminalId:t.terminalId}))),types:JSON.stringify(s.types.map(t=>$.toJSON(t))).replaceAll('"connectivity"','"junctionJunctionConnectivity"'),gdbVersion:n,moment:i??Date.now()}}async function h(s,e,r){const n=f(s),i={...I(e),f:"json"},t=g({...n.query,...i}),c=b(t,{...r,method:"post"}),u=`${n.path}/associations/query`,{data:p}=await w(u,c),l=o.fromJSON(p);return e.types.includes("connectivity")&&v(S.getLogger("esri/rest/networks/support/QueryAssociationsParameters"),"types",{replacement:"Please use 'junction-junction-connectivity' instead of 'connectivity'.",see:"https://arcg.is/11Tr8a#types",version:"4.29",warnOnce:!0}),l}export{h as queryAssociations};
