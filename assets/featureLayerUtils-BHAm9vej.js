const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./CatalogLayer-qLVUF6cJ.js","./index-CXz_NmzW.js","./index-CKoXIbg-.css","./FeatureLayerSource-DI01NLWf.js","./MeshLocalVertexSpace-DlJaQYak.js","./meshVertexSpaceUtils-BrAhT9zK.js","./External-DoWxQCDW.js","./applyEditsUtils-Ds0caX1t.js","./MeshTransform-CXVyRIrR.js","./mat4f64-q_b6UJoq.js","./quat-BKnEPS4z.js","./mat3f64-B5o_lm6j.js","./quatf64-aQ5IuZRd.js","./axisAngleDegrees-BNkqms9D.js","./editingSupport-DLxYob4Z.js","./clientSideDefaults-D3HcKfEm.js","./QueryEngineCapabilities-CsRUnGk7.js","./QueryTask-BKw7LniO.js","./executeForIds-B6LgheGo.js","./featureConversionUtils-CpssbtIx.js","./OrientedImageryLayer-6qtZHION.js"])))=>i.map(i=>d[i]);
import{av as k,aw as d,ax as K,ay as g,az as V,aA as y,aB as u,aC as f,aD as z,aE as j,aF as H,al as L}from"./index-CXz_NmzW.js";import{i as w}from"./originUtils-0RxFX74H.js";import{P as q,w as O,d as Q,v as W,$ as X,p as x,f as Z,I as N,m as S}from"./utils-ReIuZzpT.js";import{n as aa,l as ea}from"./fetchService-DPgR47RZ.js";import"./saveUtils-7w9aNA8A.js";const T="Feature Service",v="feature-layer-utils",ta=`${v}-save`,ra=`${v}-save-as`,p=`${v}-saveall`,m=`${v}-saveall-as`;function I(a){return{isValid:V(a)&&(!("dynamicDataSource"in a)||!a.dynamicDataSource),errorMessage:"Feature layer should be a layer or table in a map or feature service"}}function b(a,e){const t=k(a,"portal-item");return e!=null&&e.isTable&&(t.layerContainerType="tables"),t}function R(a){const e=b(a),t=b(a);return t.layerContainerType="tables",{forLayers:e,forTables:t}}function D(a){const e=[],t=[];for(const{layer:r,layerJSON:o}of a)na(r)?t.push(o):e.push(o);return{layers:e,tables:t}}function na(a,e){return a.isTable}function J(a){return D([a])}async function G(a,e){return/\/\d+\/?$/.test(a.url)?J(e[0]):U(e,a)}async function U(a,e){if(a.reverse(),!e)return D(a);const t=await sa(e,a);for(const r of a)C(r.layer,r.layerJSON,t);return ia(t,a),t}async function sa(a,e){let t=await a.fetchData("json");if(oa(t))return t;t||(t={}),la(t);const{layer:{url:r,customParameters:o,apiKey:s}}=e[0];return await ca(t,{url:r??"",customParameters:o,apiKey:s},e.map(n=>n.layer.layerId)),t}function oa(a){return!!(a&&Array.isArray(a.layers)&&Array.isArray(a.tables))}function la(a){a.layers||(a.layers=[]),a.tables||(a.tables=[])}function ia(a,e){const t=[],r=[];for(const{layer:o}of e){const{isTable:s,layerId:n}=o;s?r.push(n):t.push(n)}$(a.layers,t),$(a.tables,r)}function $(a,e){if(a.length<2)return;const t=[];for(const{id:r}of a)t.push(r);j(t.sort(E),e.slice().sort(E))&&a.sort((r,o)=>{const s=e.indexOf(r.id),n=e.indexOf(o.id);return s<n?-1:s>n?1:0})}function E(a,e){return a<e?-1:a>e?1:0}async function ca(a,e,t){const{url:r,customParameters:o,apiKey:s}=e,{serviceJSON:n,layersJSON:l}=await aa(r,{customParameters:o,apiKey:s}),i=A(a.layers,n.layers,t),c=A(a.tables,n.tables,t);a.layers=i.itemResources,a.tables=c.itemResources;const h=[...i.added,...c.added],B=l?[...l.layers,...l.tables]:[];await ua(a,h,r,B)}function A(a,e,t){const r=H(a,e,(s,n)=>s.id===n.id);a=a.filter(s=>!r.removed.some(n=>n.id===s.id));const o=r.added;return o.forEach(({id:s})=>{a.push({id:s})}),{itemResources:a,added:o.filter(({id:s})=>!t.includes(s))}}async function ua(a,e,t,r){const o=await ya(e),s=e.map(({id:n,type:l})=>new(o.get(l))({url:t,layerId:n,sourceJSON:r.find(({id:i})=>i===n)}));await Promise.allSettled(s.map(n=>n.load())),s.forEach(n=>{const{layerId:l,loaded:i,defaultPopupTemplate:c}=n;if(!i||c==null)return;const h={id:l,popupInfo:c.toJSON()};C(n,n.operationalLayerType==="ArcGISFeatureLayer"?h:{...h,layerType:n.operationalLayerType},a)})}async function ya(a){const e=[];a.forEach(({type:o})=>{switch(ea(o)){case"CatalogLayer":e.push(L(()=>import("./CatalogLayer-qLVUF6cJ.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]),import.meta.url).then(s=>s.default));break;case"FeatureLayer":e.push(L(()=>import("./index-CXz_NmzW.js").then(s=>s.yw),__vite__mapDeps([1,2]),import.meta.url).then(s=>s.default));break;case"OrientedImageryLayer":e.push(L(()=>import("./OrientedImageryLayer-6qtZHION.js"),__vite__mapDeps([20,1,2]),import.meta.url).then(s=>s.default))}});const t=await Promise.all(e),r=new Map;return a.forEach(({type:o},s)=>{r.set(o,t[s])}),r}function C(a,e,t){a.isTable?_(t.tables,e):_(t.layers,e)}function _(a,e){const t=a.findIndex(({id:r})=>r===e.id);t===-1?a.push(e):a[t]=e}function F(a,e){if(!a.length)throw new f(`${e}:missing-parameters`,"'layers' array should contain at least one feature layer")}function fa(a,e){const t=a.map(r=>r.portalItem.id);if(new Set(t).size>1)throw new f(`${e}:invalid-parameters`,"All layers in the 'layers' array should be loaded from the same portal item")}function M(a,e){const t=a.map(r=>r.layerId);if(new Set(t).size!==t.length)throw new f(`${e}:invalid-parameters`,"'layers' array should contain only one instance each of layer or table in a feature service")}async function pa(a){F(a,p),await Promise.all(a.map(e=>e.load()));for(const e of a)x(e,p,I),Z({layer:e,itemType:T,errorNamePrefix:p});fa(a,p),M(a,p)}function ma(a){var e,t,r,o;if(!("layerType"in a))return!!((e=a.charts)!=null&&e.length);switch(a.layerType){case"OrientedImageryLayer":return!!((t=a.charts)!=null&&t.length);case"SubtypeGroupLayer":return!!a.layers.some(s=>{var n;return!!((n=s.charts)!=null&&n.length)});case"SubtypeGroupTable":return!!a.tables.some(s=>{var n;return!!((n=s.charts)!=null&&n.length)});case"CatalogLayer":return!!((o=(r=a.footprintLayer)==null?void 0:r.charts)!=null&&o.length)}}function P(a,e){let t=0,r=0,o=0,s=0;for(const n of[...e.layers,...e.tables])if(ma(n)&&s++,"layerType"in n)switch(n.layerType){case"OrientedImageryLayer":t++;break;case"SubtypeGroupLayer":r++;break;case"SubtypeGroupTable":o++}y(a,u.ORIENTED_IMAGERY_LAYER,t>0),y(a,u.SUBTYPE_GROUP_LAYER,r>0),y(a,u.SUBTYPE_GROUP_TABLE,o>0),y(a,u.CHARTS,s>0)}function Y(a,e,t){z(e,u.METADATA),y(e,u.MULTI_LAYER,a.length>1),y(e,u.SINGLE_LAYER,a.length===1),y(e,u.TABLE,t.tables.length>0&&t.layers.length===0),P(e,t)}async function da(a,e,t){P(e,t)}async function ha(a,e,t){const{url:r,layerId:o,title:s,fullExtent:n,isTable:l}=a,i=d(r);e.url=((i==null?void 0:i.serverType)==="FeatureServer"?r:`${r}/${o}`)??null,e.title||(e.title=s),e.extent=null,l||n==null||(e.extent=await g(n)),Y([a],e,t)}function wa(a,e){for(const s of a){const n=s.parsedUrl.path,l=d(n);if(!(l==null?void 0:l.url.path))throw new f(`${e}:invalid-parameters`,S(s,`has unsupported url pattern: ${n}`),{layer:s});const c=l==null?void 0:l.serverType;if(c!=="FeatureServer"&&c!=="MapServer")throw new f(`${e}:invalid-parameters`,S(s,`has unsupported server type: ${c}`),{layer:s});if(c==="MapServer"&&a.length>1)throw new f(`${e}:invalid-parameters`,"Only one layer or table in a map service can be saved")}const t=d(a[0].parsedUrl.path),r=t==null?void 0:t.url.path;if(!a.every(s=>{const n=d(s.parsedUrl.path);return(n==null?void 0:n.url.path)===r}))throw new f(`${e}:invalid-parameters`,"'layers' array should only contain layers or tables that belong to the same feature service")}async function ba(a){F(a,m),await Promise.all(a.map(e=>e.load()));for(const e of a)x(e,m,I);wa(a,m),M(a,m)}function Ta(a,e){P(a,e),N(a)}async function va(a,e,t){let r=0;for(const{isTable:n}of a)n||r++;const o=a[0].parsedUrl.path,s=d(o);if(e.url=(s==null?void 0:s.serverType)==="FeatureServer"?s.url.path:o,e.title||(e.title=s.title),e.extent=null,r>0){const n=a.map(l=>l.fullExtent).filter(K).reduce((l,i)=>l.clone().union(i));n&&(e.extent=await g(n))}Y(a,e,t),N(e)}async function Ea(a,e){return q({layer:a,itemType:T,validateLayer:I,createJSONContext:t=>b(t,a),createItemData:(t,r)=>G(r,[t]),errorNamePrefix:ta,setItemProperties:da},e)}async function Aa(a,e){await pa(a);const t=a[0].portalItem,r=R(t),o=await Promise.all(a.map(n=>O(n,n.isTable?r.forTables:r.forLayers,e))),s=await G(t,a.map((n,l)=>({layer:n,layerJSON:o[l]})));return Ta(t,s),await t.update({data:s}),await Promise.all(a.slice(1).map(n=>n.portalItem.reload())),w(r.forLayers),w(r.forTables),t.clone()}async function _a(a,e,t){return X({layer:a,itemType:T,validateLayer:I,createJSONContext:r=>b(r,a),createItemData:(r,o)=>Promise.resolve(J(r)),errorNamePrefix:ra,newItem:e,setItemProperties:ha},t)}async function ga(a,e,t){await ba(a);const r=Q({itemType:T,errorNamePrefix:m,newItem:e}),o=R(r),s=await Promise.all(a.map(l=>O(l,l.isTable?o.forTables:o.forLayers,t))),n=await U(a.map((l,i)=>({layer:l,layerJSON:s[i]})));await va(a,r,n),await W(r,n,t);for(const l of a)l.portalItem=r.clone();return w(o.forLayers),w(o.forTables),r}export{Ea as save,Aa as saveAll,ga as saveAllAs,_a as saveAs};
