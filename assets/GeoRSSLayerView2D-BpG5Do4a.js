import{aN as m,e6 as h,e7 as g,bF as w,e8 as f,e9 as u,ea as n,ba as d,bc as b}from"./index-CXz_NmzW.js";import{S as V,u as S}from"./LayerView-BojJIdhj.js";import{t as _}from"./GraphicContainer-BLJBREnd.js";import{O as T}from"./GraphicsView2D-B1PTpAfQ.js";import"./Container-DIo32FIL.js";import"./layerViewUtils-CSpedlFv.js";import"./AGraphicContainer-Cwwto3cl.js";import"./TechniqueInstance-BtTfK-zz.js";import"./UpdateTracking2D-QWGpDUQ-.js";import"./Utils-DMcQEjc1.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-C7qHHqPJ.js";import"./ProgramTemplate-JvnLebwr.js";import"./TileContainer-DrJKE2S2.js";import"./WGLContainer-BMfbgRan.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-C4iWglQs.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-CpssbtIx.js";import"./FeatureCommandQueue-CVAbuN8t.js";import"./TechniqueType-CFPo0AVB.js";import"./GraphShaderModule-DK2POoRa.js";import"./ShaderBuilder-BObC2ki4.js";import"./BindType-BBwFZqyN.js";import"./utils-D9dC4QYm.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BUbbmxTj.js";import"./AttributeStore-Y9BESHfw.js";import"./timeSupport-Dc8VNtqB.js";import"./normalizeUtilsSync-XKUfJZaM.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-aYS0u9NW.js";let y=class extends V(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(e,r){if(!this.graphicsViews.length)return null;const o=this.layer;return this.graphicsViews.reverse().flatMap(i=>{const t=this._popupTemplates.get(i),p=i.hitTest(e);for(const s of p)s.layer=o,s.sourceLayer=o,s.popupTemplate=t;return p}).map(i=>({type:"graphic",graphic:i,layer:o,mapPoint:e}))}update(e){if(this.graphicsViews)for(const r of this.graphicsViews)r.processUpdate(e)}attach(){this.addAttachHandles([m(()=>{var e;return(e=this.layer)==null?void 0:e.featureCollections},e=>{this._clear();for(const{popupInfo:r,featureSet:o,layerDefinition:i}of e){const t=g.fromJSON(o),p=new w(t.features),s=i.drawingInfo,c=r?f.fromJSON(r):null,a=u(s.renderer),l=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:a,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[t.geometryType]=l,this._popupTemplates.set(l,c),t.geometryType!=="polygon"||this.layer.polygonSymbol?t.geometryType!=="polyline"||this.layer.lineSymbol?t.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=a.symbol):this.layer.lineSymbol=a.symbol:this.layer.polygonSymbol=a.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}},h),m(()=>{var e;return(e=this.layer)==null?void 0:e.polygonSymbol},e=>{this._graphicsViewMap.polygon.renderer=new n({symbol:e})},h),m(()=>{var e;return(e=this.layer)==null?void 0:e.lineSymbol},e=>{this._graphicsViewMap.polyline.renderer=new n({symbol:e})},h),m(()=>{var e;return(e=this.layer)==null?void 0:e.pointSymbol},e=>{this._graphicsViewMap.point.renderer=new n({symbol:e})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}_clear(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=d([b("esri.views.2d.layers.GeoRSSLayerView2D")],y);const oe=y;export{oe as default};
