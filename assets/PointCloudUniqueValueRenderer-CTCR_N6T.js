import{ba as e,bb as t,h5 as f,f0 as h,bc as a,bu as b,bq as o,mL as r,gt as m,mM as T}from"./index-ycM7R5Uo.js";var u;let s=u=class extends b{constructor(){super(...arguments),this.description=null,this.label=null,this.minValue=0,this.maxValue=0,this.color=null}clone(){return new u({description:this.description,label:this.label,minValue:this.minValue,maxValue:this.maxValue,color:o(this.color)})}};e([t({type:String,json:{write:!0}})],s.prototype,"description",void 0),e([t({type:String,json:{write:!0}})],s.prototype,"label",void 0),e([t({type:Number,json:{read:{source:"classMinValue"},write:{target:"classMinValue",isRequired:!0}}})],s.prototype,"minValue",void 0),e([t({type:Number,json:{read:{source:"classMaxValue"},write:{target:"classMaxValue",isRequired:!0}}})],s.prototype,"maxValue",void 0),e([t({type:h,json:{type:[f],write:{isRequired:!0}}})],s.prototype,"color",void 0),s=u=e([a("esri.renderers.support.pointCloud.ColorClassBreakInfo")],s);const v=s;var d;let i=d=class extends r{constructor(p){super(p),this.type="point-cloud-class-breaks",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.colorClassBreakInfos=null}clone(){return new d({...this.cloneProperties(),field:this.field,fieldTransformType:this.fieldTransformType,colorClassBreakInfos:o(this.colorClassBreakInfos),legendOptions:o(this.legendOptions)})}};e([m({pointCloudClassBreaksRenderer:"point-cloud-class-breaks"})],i.prototype,"type",void 0),e([t({json:{write:{isRequired:!0}},type:String})],i.prototype,"field",void 0),e([t({type:T,json:{write:!0}})],i.prototype,"legendOptions",void 0),e([t({type:r.fieldTransformTypeKebabDict.apiValues,json:{type:r.fieldTransformTypeKebabDict.jsonValues,read:r.fieldTransformTypeKebabDict.read,write:r.fieldTransformTypeKebabDict.write}})],i.prototype,"fieldTransformType",void 0),e([t({type:[v],json:{write:{isRequired:!0}}})],i.prototype,"colorClassBreakInfos",void 0),i=d=e([a("esri.renderers.PointCloudClassBreaksRenderer")],i);var c;let n=c=class extends b{constructor(){super(...arguments),this.description=null,this.label=null,this.values=null,this.color=null}clone(){return new c({description:this.description,label:this.label,values:o(this.values),color:o(this.color)})}};e([t({type:String,json:{write:!0}})],n.prototype,"description",void 0),e([t({type:String,json:{write:!0}})],n.prototype,"label",void 0),e([t({type:[String],json:{write:{isRequired:!0}}})],n.prototype,"values",void 0),e([t({type:h,json:{type:[f],write:{isRequired:!0}}})],n.prototype,"color",void 0),n=c=e([a("esri.renderers.support.pointCloud.ColorUniqueValueInfo")],n);const w=n;var y;let l=y=class extends r{constructor(p){super(p),this.type="point-cloud-unique-value",this.field=null,this.fieldTransformType=null,this.colorUniqueValueInfos=null,this.legendOptions=null}clone(){return new y({...this.cloneProperties(),field:o(this.field),fieldTransformType:o(this.fieldTransformType),colorUniqueValueInfos:o(this.colorUniqueValueInfos),legendOptions:o(this.legendOptions)})}};e([m({pointCloudUniqueValueRenderer:"point-cloud-unique-value"})],l.prototype,"type",void 0),e([t({json:{write:{isRequired:!0}},type:String})],l.prototype,"field",void 0),e([t({type:r.fieldTransformTypeKebabDict.apiValues,json:{type:r.fieldTransformTypeKebabDict.jsonValues,read:r.fieldTransformTypeKebabDict.read,write:r.fieldTransformTypeKebabDict.write}})],l.prototype,"fieldTransformType",void 0),e([t({type:[w],json:{write:{isRequired:!0}}})],l.prototype,"colorUniqueValueInfos",void 0),e([t({type:T,json:{write:!0}})],l.prototype,"legendOptions",void 0),l=y=e([a("esri.renderers.PointCloudUniqueValueRenderer")],l);export{i as a,l as u};
